import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.DPDPlp3K.js";const o=JSON.parse('{"title":"Clash Verge Rev 自定义路由规则教程","description":"学习如何在 Clash Verge Rev 中使用 JavaScript 自定义路由规则，包括全局扩展脚本和针对不同配置文件的规则设置。本教程提供详细代码示例，帮助您灵活管理网络流量分流。","frontmatter":{"title":"Clash Verge Rev 自定义路由规则教程","description":"学习如何在 Clash Verge Rev 中使用 JavaScript 自定义路由规则，包括全局扩展脚本和针对不同配置文件的规则设置。本教程提供详细代码示例，帮助您灵活管理网络流量分流。","head":[["meta",{"name":"keywords","content":"Clash Verge Rev, 自定义路由规则, JavaScript 脚本, 分流配置, config 对象, profileName, 全局扩展脚本, 网络代理规则, Clash Mihomo, 流量分流, 代理配置"}]]},"headers":[],"relativePath":"guide/rules.md","filePath":"guide/rules.md"}'),l={name:"guide/rules.md"};function t(p,s,h,k,r,c){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="clash-verge-rev-自定义路由规则教程" tabindex="-1">Clash Verge Rev 自定义路由规则教程 <a class="header-anchor" href="#clash-verge-rev-自定义路由规则教程" aria-label="Permalink to &quot;Clash Verge Rev 自定义路由规则教程&quot;">​</a></h1><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>如果你是第一次使用 Clash Verge Rev，请先阅读<a href="/guide/quickstart.html">快速入门</a>。</p></div><p>不知道规则类型? -&gt; <a href="https://wiki.metacubex.one/config/rules" target="_blank" rel="noreferrer">Clash Mihomo路由规则文档</a>。</p><p>不会写JavaScript? -&gt; <a href="https://www.runoob.com/js/js-tutorial.html" target="_blank" rel="noreferrer">菜鸟教程</a>。</p><p>想要更多资料? -&gt; <a href="./script.html">Script配置</a></p><h2 id="通过全局扩展脚本" tabindex="-1">通过全局扩展脚本 <a class="header-anchor" href="#通过全局扩展脚本" aria-label="Permalink to &quot;通过全局扩展脚本&quot;">​</a></h2><p><strong>原理</strong>：ClashVegerRev通过暴露出可编程的API，即 <code>config</code> 对象与 <code>profileName</code> 对象，可通过 <code>main</code> 函数传入config参数来编辑配置对象。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 配置中的规则&quot;config.rules&quot;是一个数组，通过新旧数组合并来添加</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prependRule</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 添加的数组</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> prependRule</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 将百度分流到直连</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;DOMAIN-SUFFIX,baidu.com,DIRECT&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 将本网站分流到自动选择(前提是你的代理组当中有&quot;自动选择&quot;)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;DOMAIN-SUFFIX,clashverge.dev,自动选择&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 把旧规则合并到新规则后面(也可以用其它合并数组的办法)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> oldrules </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> config[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  config[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prependRule.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">concat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(oldrules);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> config;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>还可以参考这个issue中讨论的做法-&gt; <a href="https://github.com/clash-verge-rev/clash-verge-rev/issues/1437#issuecomment-2395050752" target="_blank" rel="noreferrer">issues/1437#issuecomment-2395050752</a></p><h2 id="为不同配置文件启用不同的脚本" tabindex="-1">为不同配置文件启用不同的脚本 <a class="header-anchor" href="#为不同配置文件启用不同的脚本" aria-label="Permalink to &quot;为不同配置文件启用不同的脚本&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">profileName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 设订阅A</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(profileName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;A&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 对config修改</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ......</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 不是“A”则返回未修改的配置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> config;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">🎉 节点推荐</p><p>🚀 <a href="https://www.xn--9kqrm7t.com/#/register?code=JRtE5uIV" target="_blank" rel="noreferrer">优信云</a>：IEPL/IPLC 高速专线，￥15.00/月</p></div>`,12)]))}const g=i(l,[["render",t]]);export{o as __pageData,g as default};
